#!/bin/bash

if [ "$EUID" -ne 0 ]
  then
    echo "WARNING: Please run as root or sudo user! Exiting..."
    exit 1
fi

echo "Initiating Docker Installation..."

install_yum_utils () {
    echo; echo "-- Installing yum-utils with device-mapper-persistent-data and lvm2 ...";
    yum install -y yum-utils device-mapper-persistent-data lvm2 -y
    echo "-- Done."; echo;
}

add_docker_repo () {
    echo; echo "-- Adding Docker repo ...";
    yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
    echo "-- Done."; echo;
}

install_dockerce () {
    echo; echo "-- Installing DockerCE ...";
    yum install docker-ce docker-ce-cli --nobest -y
    echo "-- Done."; echo;
}

install_docker_compose () {
    echo; echo "-- Installing docker-compose ...";
    curl -L "https://github.com/docker/compose/releases/download/1.25.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    chmod +x /usr/local/bin/docker-compose
    echo "Docker-Compose version: $(docker-compose --version)"
    echo "-- Done."; echo;
}

start_docker () {
    echo; echo "-- Starting Docker ...";
    systemctl start docker
    echo "-- Done."; echo;
}

test_docker () {
    echo; echo "-- Testing Docker ...";
    docker run hello-world
    echo "-- Done."; echo;
}

setup_users () {
    echo; echo "-- Adding & Configuring Users ...";
    echo "---- Creating group 'docker' ..."
    groupadd docker
    echo "---- Creating user 'docker-user' ..."
    useradd docker-user
    echo "---- Adding user 'docker-user' to 'docker' group ..."
    usermod -aG docker docker-user
    echo "-- Done."; echo;
}

read_docker_service_file () {
    filename="/etc/systemd/system/docker.service.d/override.conf"
    if [ ! -f ${filename} ]; then
        echo "File '${filename}' not found! Creating..."
        touch ${filename}
    fi
    echo "-- Reading ${filename} ..."
    cat ${filename}
    echo "-- Done."; echo;
}

create_systemd_dropin_dir () {
    echo "-- Creating a systemd drop-in directory for the docker service"
    mkdir -p /etc/systemd/system/docker.service.d
    echo "-- Done."; echo;
}

override_docker_service_file () {
    filename="/etc/systemd/system/docker.service.d/override.conf"
    echo "-- Overriding ${filename} ..."
    echo '[Service]' > ${filename}  # single > to wipe file
    echo 'ExecStart=' >> ${filename}  # double >> to append
    echo 'ExecStart=/usr/bin/dockerd -H fd:// -H tcp://127.0.0.1:2375' >> ${filename}
    echo "-- Done."; echo;
}

reload_systemctl () {
    echo; echo "-- Reloading systemctl configuration ...";
    systemctl daemon-reload
    echo "-- Done."; echo;
} 

enable_docker_on_reboot () {
    echo; echo "-- Enabling Docker to start on reboot ...";
    systemctl enable docker
    echo "-- Done."; echo;
}

restart_docker () {
    echo; echo "-- Restarting Docker Service ...";
    systemctl restart docker
    echo "-- Done."; echo;
} 

check_docker_override () {
    echo; echo "-- Checking that changes to docker.service were honored ...";
    sudo netstat -lntp | grep dockerd
    echo "-- Done."; echo;
}

# Run
    
# Uninstall any existing Docker packages
echo "Removing all Docker packages from yum in 5 seconds..."
sleep 5
yum remove docker* -y

install_yum_utils
add_docker_repo
install_dockerce
start_docker
test_docker
setup_users
read_docker_service_file
create_systemd_dropin_dir
override_docker_service_file
read_docker_service_file
enable_docker_on_reboot
install_docker_compose
reload_systemctl
restart_docker
check_docker_override

echo "Docker Installation Complete. Please exit shell to apply user/group changes."
